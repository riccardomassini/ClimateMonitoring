/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package client.frame;

import client.clientrmi.ClientRMI;
import client.clientrmi.ResetClient;
import client.registraeventi.Chiusura;
import commons.oggetti.Operatore;
import commons.oggetti.PuntoInteresse;

import java.rmi.RemoteException;

import commons.servizio.Autenticazione;
import commons.servizio.GestioneCentriMonitoraggio;
import java.util.*;
import javax.swing.*;

public class AreaOperatore extends javax.swing.JFrame {
    Autenticazione autenticazione = ClientRMI.ottieniClientRMI().ottieniStubAutenticazione();
    GestioneCentriMonitoraggio gestioneCentriMonitoraggio = ClientRMI.ottieniClientRMI().ottieniStubGestioneCentriMonitoraggio();
    String nomeCentroMonitoraggioOperatore;
    Operatore operatorePassato;
    String sceltaPaese = null;
    String nomePaese = null;
    String cc = null;
    
    public AreaOperatore(){
        initComponents();
    }
    
    public AreaOperatore(int id, String password){
        initComponents();
        addWindowListener(new Chiusura());
        operatorePassato = new Operatore(id, password);

        //TODO rmi client
        try {
            if (autenticazione.loginSenzaBcrypt(operatorePassato.getUsername(), operatorePassato.getPassword()) == true) {
                operatorePassato = autenticazione.ottieniOperatoreAutenticato();
                jLabel2.setText("OPERATORE " + operatorePassato.getUsername());

                if (operatorePassato.getIdCentroMonitoraggio() == null ) {
                    titReg.setVisible(true);
                    registraCentro.setVisible(true);
                    scegliCentro.setVisible(true);
                    scelta.setVisible(false);
                    cercaParam.setVisible(false);
                    out1.setVisible(false);
                    out2.setVisible(false);
                } else {
                    titReg.setVisible(false);
                    registraCentro.setVisible(false);
                    scegliCentro.setVisible(false);
                    scelta.setVisible(true);
                    out1.setText("Centro " + operatorePassato.getIdCentroMonitoraggio());
                    nomeCentroMonitoraggioOperatore = operatorePassato.getIdCentroMonitoraggio();
                    out2.setVisible(true);
                    ArrayList<PuntoInteresse> areeAssociate = gestioneCentriMonitoraggio.ottieniAreeAssociate(nomeCentroMonitoraggioOperatore);
                    ArrayList<String> names = new ArrayList<>();

                    for(PuntoInteresse punto: areeAssociate){
                        names.add(punto.getNomePuntoInteresseASCII() + " " + punto.getCodiceNazione());
                    }

                    names.add(0, "nessun paese");

                    String[] namesArray = names.toArray(new String[0]);
                    DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(namesArray);
                    scelta.setModel(model);
                }
            }
        } catch(RemoteException ex) {
            System.err.println("Errore RMI");
            ex.printStackTrace();
            System.exit(1);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JButton();
        registraCentro = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        titolo = new javax.swing.JLabel();
        out1 = new javax.swing.JLabel();
        titReg = new javax.swing.JLabel();
        out2 = new javax.swing.JLabel();
        scegliCentro = new javax.swing.JButton();
        scelta = new javax.swing.JComboBox<>();
        cercaParam = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        back.setText("Indietro");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 254, -1, -1));

        registraCentro.setText("Registra");
        registraCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registraCentroActionPerformed(evt);
            }
        });
        getContentPane().add(registraCentro, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titolo.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        titolo.setText("AREA OPERATORE");
        jPanel1.add(titolo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        out1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel1.add(out1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 170, 31));

        titReg.setText("REGISTRA IL CENTRO");
        jPanel1.add(titReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 159, -1, 18));

        out2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel1.add(out2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 100, 26));

        scegliCentro.setText("Scegli");
        scegliCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scegliCentroActionPerformed(evt);
            }
        });
        jPanel1.add(scegliCentro, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, -1, -1));

        scelta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sceltaActionPerformed(evt);
            }
        });
        jPanel1.add(scelta, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 120, 30));

        cercaParam.setText("Cerca");
        cercaParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cercaParamActionPerformed(evt);
            }
        });
        jPanel1.add(cercaParam, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 160, 80, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("OPERATORE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, -1, 24));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        autenticazione = ClientRMI.ottieniClientRMI().ottieniStubAutenticazione();
        if(autenticazione != null){
            Login l = new Login();
            l.setLocation(this.getX(), this.getY());
            this.dispose();
            l.setVisible(true); 
        }else{
            ResetClient.spegniClient(this);
        }
    }//GEN-LAST:event_backActionPerformed

    private void registraCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registraCentroActionPerformed
        autenticazione = ClientRMI.ottieniClientRMI().ottieniStubAutenticazione();
        if(autenticazione != null){
            RegistraCentro rc = new RegistraCentro(operatorePassato.getUsername(), operatorePassato.getPassword());
            rc.setLocation(this.getX(), this.getY());
            this.dispose();
            rc.setVisible(true);
        }else{
            ResetClient.spegniClient(this);
        }
    }//GEN-LAST:event_registraCentroActionPerformed

    private void cercaParamActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_cercaParamActionPerformed
        autenticazione = ClientRMI.ottieniClientRMI().ottieniStubAutenticazione();
        if(autenticazione != null){
            out2.setText("");
            PuntoInteresse p;

            if(sceltaPaese != null && sceltaPaese != "nessun paese"){
                try {
                    p = gestioneCentriMonitoraggio.ottieniPaese(nomePaese, cc, nomeCentroMonitoraggioOperatore);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
                Parametri pa = new Parametri(operatorePassato.getUsername(), operatorePassato.getPassword(), nomeCentroMonitoraggioOperatore, p);
                pa.setLocation(this.getX(), this.getY());
                this.dispose();
                pa.setVisible(true);
            }else
                out2.setText("Invalido");
        }else{
            ResetClient.spegniClient(this);
        }
    }//GEN-LAST:event_cercaParamActionPerformed

    private void scegliCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scegliCentroActionPerformed
        autenticazione = ClientRMI.ottieniClientRMI().ottieniStubAutenticazione();
        if(autenticazione != null){
            ScegliCentro sc = new ScegliCentro(operatorePassato.getUsername(), operatorePassato.getPassword());
            sc.setLocation(this.getX(), this.getY());
            this.dispose();
            sc.setVisible(true);
        }else{
            ResetClient.spegniClient(this);
        }
    }//GEN-LAST:event_scegliCentroActionPerformed

    private void sceltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sceltaActionPerformed
        autenticazione = ClientRMI.ottieniClientRMI().ottieniStubAutenticazione();
        if(autenticazione != null){
            sceltaPaese = (String) scelta.getSelectedItem();
            String[] parts = sceltaPaese.split(" ");
            nomePaese = parts[0];
            cc = parts[1];
        }else{
            ResetClient.spegniClient(this);
        }
    }//GEN-LAST:event_sceltaActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AreaOperatore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AreaOperatore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AreaOperatore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AreaOperatore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AreaOperatore().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton cercaParam;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel out1;
    private javax.swing.JLabel out2;
    private javax.swing.JButton registraCentro;
    private javax.swing.JButton scegliCentro;
    private javax.swing.JComboBox<String> scelta;
    private javax.swing.JLabel titReg;
    private javax.swing.JLabel titolo;
    // End of variables declaration//GEN-END:variables
}
